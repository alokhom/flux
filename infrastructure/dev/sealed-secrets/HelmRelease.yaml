apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: sealed-secrets
  namespace: sealed-secrets
spec:
  interval: 30m
  chart:
    spec:
      chart: sealed-secrets
      version: "2.7.4"
      sourceRef:
        kind: HelmRepository
        name: sealed-secrets
        namespace: sealed-secrets
      interval: 5m
  values:
    ## @section Common parameters

    ## @param kubeVersion Override Kubernetes version
    ##
    kubeVersion: ""
    ## @param nameOverride String to partially override sealed-secrets.fullname
    ##
    nameOverride: ""
    ## @param fullnameOverride String to fully override sealed-secrets.fullname
    ##
    fullnameOverride: ""
    ## @param namespace Namespace where to deploy the Sealed Secrets controller
    ##
    namespace: "sealed-secrets"
    ## @param extraDeploy [array] Array of extra objects to deploy with the release
    ##
    extraDeploy: []
    ## @param commonAnnotations [object] Annotations to add to all deployed resources
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    commonAnnotations: {}
    ## @section Sealed Secrets Parameters

    ## Sealed Secrets image
    ## ref: https://hub.docker.com/r/bitnami/sealed-secrets-controller/tags
    ## @param image.registry Sealed Secrets image registry
    ## @param image.repository Sealed Secrets image repository
    ## @param image.tag Sealed Secrets image tag (immutable tags are recommended)
    ## @param image.pullPolicy Sealed Secrets image pull policy
    ## @param image.pullSecrets [array]  Sealed Secrets image pull secrets
    ##
    image:
      registry: docker.io
      repository: bitnami/sealed-secrets-controller
      tag: v0.19.5
      ## Specify a imagePullPolicy
      ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
      ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
      ##
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ## e.g:
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: []
    ## @param createController Specifies whether the Sealed Secrets controller should be created
    ##
    createController: true
    ## @param secretName The name of an existing TLS secret containing the key used to encrypt secrets
    ##
    secretName: "sealed-secrets-key"
    ## @param updateStatus Specifies whether the Sealed Secrets controller should update the status subresource
    ##
    updateStatus: true
    ## @param keyrenewperiod Specifies key renewal period. Default 30 days
    ## e.g
    ## keyrenewperiod: "720h30m"
    ##
    keyrenewperiod: ""
    ## @param rateLimit Number of allowed sustained request per second for verify endpoint
    ##
    rateLimit: ""
    ## @param rateLimitBurst Number of requests allowed to exceed the rate limit per second for verify endpoint
    ##
    rateLimitBurst: ""
    ## @param additionalNamespaces List of namespaces used to manage the Sealed Secrets
    ##
    additionalNamespaces: []
    ## @param command Override default container command
    ##
    command: []
    ## @param args Override default container args
    ##
    args: []
    ## Configure extra options for Sealed Secret containers' liveness, readiness and startup probes
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
    ## @param livenessProbe.enabled Enable livenessProbe on Sealed Secret containers
    ## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
    ## @param livenessProbe.periodSeconds Period seconds for livenessProbe
    ## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
    ## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
    ## @param livenessProbe.successThreshold Success threshold for livenessProbe
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 0
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1
    ## @param readinessProbe.enabled Enable readinessProbe on Sealed Secret containers
    ## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
    ## @param readinessProbe.periodSeconds Period seconds for readinessProbe
    ## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
    ## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
    ## @param readinessProbe.successThreshold Success threshold for readinessProbe
    ##
    readinessProbe:
      enabled: true
      initialDelaySeconds: 0
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1
    ## @param startupProbe.enabled Enable startupProbe on Sealed Secret containers
    ## @param startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
    ## @param startupProbe.periodSeconds Period seconds for startupProbe
    ## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe
    ## @param startupProbe.failureThreshold Failure threshold for startupProbe
    ## @param startupProbe.successThreshold Success threshold for startupProbe
    ##
    startupProbe:
      enabled: false
      initialDelaySeconds: 0
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1
    ## @param customLivenessProbe Custom livenessProbe that overrides the default one
    ##
    customLivenessProbe: {}
    ## @param customReadinessProbe Custom readinessProbe that overrides the default one
    ##
    customReadinessProbe: {}
    ## @param customStartupProbe Custom startupProbe that overrides the default one
    ##
    customStartupProbe: {}
    ## Sealed Secret resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ## @param resources.limits [object] The resources limits for the Sealed Secret containers
    ## @param resources.requests [object] The requested resources for the Sealed Secret containers
    ##
    resources:
      limits: {}
      requests: {}
    ## Configure Pods Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
    ## @param podSecurityContext.enabled Enabled Sealed Secret pods' Security Context
    ## @param podSecurityContext.fsGroup Set Sealed Secret pod's Security Context fsGroup
    ##
    podSecurityContext:
      enabled: true
      fsGroup: 65534
    ## Configure Container Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
    ## @param containerSecurityContext.enabled Enabled Sealed Secret containers' Security Context
    ## @param containerSecurityContext.readOnlyRootFilesystem Whether the Sealed Secret container has a read-only root filesystem
    ## @param containerSecurityContext.runAsNonRoot Indicates that the Sealed Secret container must run as a non-root user
    ## @param containerSecurityContext.runAsUser Set Sealed Secret containers' Security Context runAsUser
    ##
    containerSecurityContext:
      enabled: true
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 1001

    ## @param automountServiceAccountToken whether to automatically mount the service account API-token to a particular pod
    automountServiceAccountToken: ""

    ## @param podLabels [object] Extra labels for Sealed Secret pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    ##
    podLabels: {}
    ## @param podAnnotations [object] Annotations for Sealed Secret pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    podAnnotations: {}
    ## @param priorityClassName Sealed Secret pods' priorityClassName
    ##
    priorityClassName: ""
    ## @param runtimeClassName Sealed Secret pods' runtimeClassName
    ##
    runtimeClassName: ""
    ## @param affinity [object] Affinity for Sealed Secret pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ##
    affinity: {}
    ## @param nodeSelector [object] Node labels for Sealed Secret pods assignment
    ## ref: https://kubernetes.io/docs/user-guide/node-selection/
    ##
    nodeSelector: {}
    ## @param tolerations [array] Tolerations for Sealed Secret pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []
    ## @param additionalVolumes [object] Extra Volumes for the Sealed Secrets Controller Deployment
    ## ref: https://kubernetes.io/docs/concepts/storage/volumes/
    ##
    additionalVolumes: []
    ## @param additionalVolumeMounts [object] Extra volumeMounts for the Sealed Secrets Controller container
    ## ref: https://kubernetes.io/docs/concepts/storage/volumes/
    ##
    additionalVolumeMounts: []
    ## @param hostNetwork Sealed Secrets pods' hostNetwork
    hostNetwork: false
    ## @param dnsPolicy Sealed Secrets pods' dnsPolicy
    dnsPolicy: ""

    ## @section Traffic Exposure Parameters

    ## Sealed Secret service parameters
    ##
    service:
      ## @param service.type Sealed Secret service type
      ##
      type: ClusterIP
      ## @param service.port Sealed Secret service HTTP port
      ##
      port: 8080
      ## @param service.nodePort Node port for HTTP
      ## Specify the nodePort value for the LoadBalancer and NodePort service types
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
      ## NOTE: choose port between <30000-32767>
      ##
      nodePort: ""
      ## @param service.annotations [object] Additional custom annotations for Sealed Secret service
      ##
      annotations: {}
    ## Sealed Secret ingress parameters
    ## ref: http://kubernetes.io/docs/user-guide/ingress/
    ##
