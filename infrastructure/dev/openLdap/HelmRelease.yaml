apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: openldap
  namespace: openldap
spec:
  interval: 30m
  chart:
    spec:
      chart: openldap-stack-ha
      version: "4.1.1"
      sourceRef:
        kind: HelmRepository
        name: openldap
        namespace: openldap
      interval: 5m
  upgrade:
    # crds: CreateReplace
    # Force recreation due to Helm not properly patching Deployment with e.g. added port,
    # causing spurious drift detection
    force: true
  postRenderers:
    # Instruct helm-controller to use built-in "kustomize" post renderer.
    - kustomize:
        # Array of inline JSON6902 patch definitions as YAML object.
        # Note, this is a YAML object and not a string, to avoid syntax
        # indention errors.
        patches:
          - target:
              version: v1
              kind: StatefulSet
              name: openldap
              labelSelector: "app.kubernetes.io/name=openldap-stack-ha"           
            patch: |
              - op: add #action 
                path: "/spec/template/spec/volumes/4" #resouirce we want to change
                value:
                  name: check
                  emptyDir: {}
              #####
              # Initcontainer 1
              - op: add #action 
                path: "/spec/template/spec/initContainers/1" #resouirce we want to change
                value:
                  name: init-2
                  image: busybox
                  command: ['sh', '-c']
                  args:
                  - >
                    chmod -R 777 /container/service/slapd/assets/config/bootstrap/ldif/custom/;
                    cp /ldifs/* /container/service/slapd/assets/config/bootstrap/ldif/custom/ && echo copied;
                  volumeMounts:
                  - name: custom-ldif-files
                    mountPath: /ldifs
                  - name: check
                    mountPath: "/container/service/slapd/assets/config/bootstrap/ldif/custom"
              #####
              # container 0 
              - op: replace #action 
                path: "/spec/template/spec/containers/0/ports/0/containerPort" #resouirce we want to change
                value: 389
              - op: replace #action 
                path: "/spec/template/spec/containers/0/ports/1/containerPort" #resouirce we want to change
                value: 636
              - op: replace #action 
                path: "/spec/template/spec/containers/0/volumeMounts/0" #resouirce we want to change
                value:
                  name: data
                  mountPath: /var/lib/ldap
                  subPath: data
              - op: replace #action 
                path: "/spec/template/spec/containers/0/volumeMounts/1" #resouirce we want to change
                value:
                  name: data
                  mountPath: /container/service/slapd/assets/certs
              - op: replace #action 
                path: "/spec/template/spec/containers/0/volumeMounts/2" #resouirce we want to change
                value:
                  name: data
                  mountPath: /etc/ldap/slapd.d
                  subPath: config-data
          - target:
              version: v1
              kind: ConfigMap
              name: openldap-replication-acls
              labelSelector: "app=openldap"       
            patch: |
              - op: replace #action 
                path: "/data" #resouirce we want to change
                value:
                  # replication
                  syncprov.ldif: |
                    # Load syncprov module
                    dn: cn=module{0},cn=config
                    objectClass: olcModuleList
                    cn: module{0}
                    olcModuleLoad: syncprov
                  serverid.ldif: |
                    # Set server ID
                    dn: cn=config
                    changeType: modify
                    add: olcServerID
                    olcServerID: 1 ldap://openldap-0.openldap-headless.openldap.svc.cluster.local:389
                    olcServerID: 2 ldap://openldap-1.openldap-headless.openldap.svc.cluster.local:389
                    olcServerID: 3 ldap://openldap-2.openldap-headless.openldap.svc.cluster.local:389
                  csyncprov.ldif: |
                    # Add syncprov on config
                    dn: olcOverlay=syncprov,olcDatabase={0}config,cn=config
                    changetype: add
                    objectClass: olcOverlayConfig
                    objectClass: olcSyncProvConfig
                    olcOverlay: syncprov
                  rep.ldif: |
                    # Add sync replication on config
                    dn: olcDatabase={0}config,cn=config
                    changetype: modify
                    add: olcSyncRepl
                    olcSyncRepl: rid=001 provider=ldap://openldap-0.openldap-headless.openldap.svc.cluster.local:389 binddn="cn=admin,cn=config" bindmethod=simple credentials=config@Password searchbase="cn=config" type=refreshAndPersist retry="60 +" timeout=1 starttls=critical tls_reqcert=never
                    olcSyncRepl: rid=002 provider=ldap://openldap-1.openldap-headless.openldap.svc.cluster.local:389 binddn="cn=admin,cn=config" bindmethod=simple credentials=config@Password searchbase="cn=config" type=refreshAndPersist retry="60 +" timeout=1 starttls=critical tls_reqcert=never
                    olcSyncRepl: rid=003 provider=ldap://openldap-2.openldap-headless.openldap.svc.cluster.local:389 binddn="cn=admin,cn=config" bindmethod=simple credentials=config@Password searchbase="cn=config" type=refreshAndPersist retry="60 +" timeout=1 starttls=critical tls_reqcert=never
                    -
                    add: olcMirrorMode
                    olcMirrorMode: TRUE
                  bsyncprov.ldif: |
                    dn: olcOverlay=syncprov,olcDatabase={2}mdb,cn=config
                    objectClass: olcOverlayConfig
                    objectClass: olcSyncProvConfig
                    olcOverlay: syncprov
                    olcSpSessionLog: 100
                  brep.ldif: |
                    dn: olcDatabase={2}mdb,cn=config
                    changetype: modify
                    add: olcSyncrepl
                    olcSyncrepl:
                      rid=101
                      provider=ldap://openldap-0.openldap-headless.openldap.svc.cluster.local:389
                      binddn=cn=admin,dc=systemtracker,dc=no-ip,dc=org
                      bindmethod=simple
                      credentials=admin@Password
                      searchbase=dc=systemtracker,dc=no-ip,dc=org
                      type=refreshAndPersist
                      interval=00:00:00:10
                      network-timeout=0
                      retry="60 +"
                      timeout=1
                      starttls=critical
                      tls_reqcert=never
                    olcSyncrepl:
                      rid=102
                      provider=ldap://openldap-1.openldap-headless.openldap.svc.cluster.local:389
                      binddn=cn=admin,dc=systemtracker,dc=no-ip,dc=org
                      bindmethod=simple
                      credentials=admin@Password
                      searchbase=dc=systemtracker,dc=no-ip,dc=org
                      type=refreshAndPersist
                      interval=00:00:00:10
                      network-timeout=0
                      retry="60 +"
                      timeout=1
                      starttls=critical
                      tls_reqcert=never
                    olcSyncrepl:
                      rid=103
                      provider=ldap://openldap-2.openldap-headless.openldap.svc.cluster.local:389
                      binddn=cn=admin,dc=systemtracker,dc=no-ip,dc=org
                      bindmethod=simple
                      credentials=admin@Password
                      searchbase=dc=systemtracker,dc=no-ip,dc=org
                      type=refreshAndPersist
                      interval=00:00:00:10
                      network-timeout=0
                      retry="60 +"
                      timeout=1
                      starttls=critical
                      tls_reqcert=never

                    dn: olcDatabase={2}mdb,cn=config
                    changetype: modify
                    add: olcMirrorMode
                    olcMirrorMode: TRUE
                  # acls
                  acls.ldif: |
                    dn: olcDatabase={2}mdb,cn=config
                    changetype: modify
                    replace: olcAccess
                    olcAccess: {0}to *
                      by dn.exact=gidNumber=0+uidNumber=1001,cn=peercred,cn=external,cn=auth manage
                      by * break
                    olcAccess: {1}to attrs=userPassword,shadowLastChange
                      by self write
                      by dn="cn=admin,dc=systemtracker,dc=no-ip,dc=org" write
                      by anonymous auth by * none
                    olcAccess: {2}to *
                      by dn="cn=admin,dc=systemtracker,dc=no-ip,dc=org" write
                      by self read
                      by * none
  values:
    # Default values for openldap.
    # This is a YAML-formatted file.
    # Declare variables to be passed into your templates.

    # Global Docker image parameters
    # Please, note that this will override the image parameters, including dependencies, configured to use the global value
    # Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass
    global:
      imageRegistry: ""
      ## E.g.
      ## imagePullSecrets:
      ##   - myRegistryKeySecretName
      ##
      #imagePullSecrets: [""]
      ## ldapDomain , can be explicit (e.g dc=toto,c=ca) or domain based (e.g example.com)
      ldapDomain: "systemtracker.no-ip.org"
      # Specifies an existing secret to be used for admin and config user passwords. The expected key are LDAP_ADMIN_PASSWORD and LDAP_CONFIG_ADMIN_PASSWORD.
      # existingSecret: ""
      ## Default Passwords to use, stored as a secret. Not used if existingSecret is set.
      adminPassword:  admin@Password
      configPassword: config@Password
      ldapPort: 389
      sslLdapPort: 636

    ## @section Common parameters

    ## @param kubeVersion Override Kubernetes version
    ##
    kubeVersion: ""
    ## @param nameOverride String to partially override common.names.fullname
    ##
    nameOverride: ""
    ## @param fullnameOverride String to fully override common.names.fullname
    ##
    fullnameOverride: ""
    ## @param commonLabels Labels to add to all deployed objects
    ##
    commonLabels: {}
    ## @param commonAnnotations Annotations to add to all deployed objects
    ##
    commonAnnotations: {}
    ## @param clusterDomain Kubernetes cluster domain name
    ##
    clusterDomain: cluster.local
    ## @param extraDeploy Array of extra objects to deploy with the release
    ##
    extraDeploy: []

    replicaCount: 3

    image:
      # From repository https://hub.docker.com/r/bitnami/openldap/
      repository: osixia/openldap
      tag: stable-arm64v8
      pullPolicy: Always
      pullSecrets: []

    # Set the container log level
    # Valid log levels: none, error, warning, info (default), debug, trace
    logLevel: info


    # Settings for enabling TLS with custom certificate
    # need a secret with tls.crt, tls.key and ca.crt keys with associated files
    # Ref: https://kubernetes.io/docs/tasks/configmap-secret/managing-secret-using-kubectl/#create-a-secret
    customTLS:
      enabled: false
      image:
        #repository: alpine/openssl
        repository: shamelesscookie/openssl
        tag: latest
      secret: ""  # The name of a kubernetes.io/tls type secret to use for TLS
    ## Add additional labels to all resources
    extraLabels: {}

    service:
      annotations: {}
      ## If service type NodePort, define the value here
      #ldapPortNodePort:
      #sslLdapPortNodePort:
      ## List of IP addresses at which the service is available
      ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
      ##
      externalIPs: []

      #loadBalancerIP:
      #loadBalancerSourceRanges: []
      type: ClusterIP
      sessionAffinity: None

    # Default configuration for openldap as environment variables. These get injected directly in the container.
    # Use the env variables from https://hub.docker.com/r/bitnami/openldap/
    # Be careful, do not modify the following values unless you know exactly what your are doing
    env:
      LDAP_LOG_LEVEL: "256"
      LDAP_ORGANISATION: "systemtracker.no-ip.org Inc."
      LDAP_DOMAIN: "systemtracker.no-ip.org"
      LDAP_BASE_DN: "dc=systemtracker,dc=no-ip,dc=org"
      LDAP_READONLY_USER: "false"
      LDAP_READONLY_USER_USERNAME: "readonly"
      LDAP_READONLY_USER_PASSWORD: "readonly"
      LDAP_RFC2307BIS_SCHEMA: "false"
      LDAP_BACKEND: "mdb"
      LDAP_TLS: "true"
      LDAP_TLS_CRT_FILENAME: "ldap.crt"
      LDAP_TLS_KEY_FILENAME: "ldap.key"
      LDAP_TLS_DH_PARAM_FILENAME: "dhparam.pem"
      LDAP_TLS_CA_CRT_FILENAME: "ca.crt"
      LDAP_TLS_ENFORCE: "false"
      CONTAINER_LOG_LEVEL: "4"
      LDAP_TLS_REQCERT: "never"
      KEEP_EXISTING_CONFIG: "false"
      LDAP_REMOVE_CONFIG_AFTER_SETUP: "true"
      LDAP_SSL_HELPER_PREFIX: "ldap"
      LDAP_TLS_VERIFY_CLIENT: "never"
      LDAP_TLS_PROTOCOL_MIN: "3.0"
      LDAP_TLS_CIPHER_SUITE: "NORMAL"

    # Pod Disruption Budget for Stateful Set
    # Disabled by default, to ensure backwards compatibility
    pdb:
      enabled: false
      minAvailable: 1
      maxUnavailable: ""

    ## User list to create (comma separated list) , can't be use with customLdifFiles
    ## Default set by bitnami image
    # users: user01,user02

    ## User password to create (comma separated list, one for each user)
    ## Default set by bitnami image
    # userPasswords: bitnami1, bitnami2

    ## Group to create and add list of user above
    ## Default set by bitnami image
    # group: readers

    # Custom openldap schema files used to be used in addition to default schemas
    # customSchemaFiles:
    #   custom.ldif: |-
    #     # custom schema
    #   anothercustom.ldif: |-
    #     # another custom schema

    ## Existing configmap with custom ldif
    # Can't be use with customLdifFiles
    # Same format as customLdifFiles
    # customLdifCm: my-custom-ldif-cm

    # Custom openldap configuration files used to override default settings
    # DO NOT FORGET to put the Root Organisation object as it won't be created while using customLdifFiles
    customLdifFiles:
      01-default-users.ldif: |-
        dn: cn=users,dc=systemtracker,dc=no-ip,dc=org
        cn: users
        changetype: add
        gidnumber: 500
        objectclass: posixGroup
        objectclass: top

        dn: cn=Jean Dupond,dc=systemtracker,dc=no-ip,dc=org
        cn: Jean Dupond
        changetype: add
        gidnumber: 500
        givenname: Jean
        homedirectory: /home/users/jdupond
        objectclass: inetOrgPerson
        objectclass: posixAccount
        objectclass: top
        sn: Dupond
        uid: jdupond
        uidnumber: 1000
        userPassword: {MD5}KOULhzfBhPTq9k7a9XfCGw==

    # Custom openldap ACLs
    # If not defined, the following default ACLs are applied:
    customAcls: |-
      dn: olcDatabase={2}mdb,cn=config
      changetype: modify
      replace: olcAccess
      olcAccess: {0}to *
        by dn.exact=gidNumber=0+uidNumber=1001,cn=peercred,cn=external,cn=auth manage
        by * break
      olcAccess: {1}to attrs=userPassword,shadowLastChange
        by self write
        by dn="{{ include "global.bindDN" . }}" write
        by anonymous auth 
        by * none
      olcAccess: {2}to *
        by dn="{{ include "global.bindDN" . }}" write
        by users read
        by * none

    replication:
      enabled: true
      # Enter the name of your cluster, defaults to "cluster.local"
      clusterName: "cluster.local"
      retry: 60
      timeout: 1
      interval: 00:00:00:10
      starttls: "critical"
      tls_reqcert: "never"
    ## Persist data to a persistent volume
    persistence:
      enabled: true
      ## database data Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      # storageClass: "standard-singlewriter"
      # existingClaim: openldap-pvc
      accessModes:
        - ReadWriteOnce
      size: 8Gi
      storageClass: "local-path"

    ## @param customLivenessProbe Custom livenessProbe that overrides the default one
    ##
    customLivenessProbe: {}
    ## @param customReadinessProbe Custom readinessProbe that overrides the default one
    ##
    customReadinessProbe: {}
    ## @param customStartupProbe Custom startupProbe that overrides the default one
    ##
    customStartupProbe: {}
    ## OPENLDAP  resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ## @param resources.limits The resources limits for the OPENLDAP  containers
    ## @param resources.requests The requested resources for the OPENLDAP  containers
    ##
    resources:
      limits: {}
      requests: {}
    ## Configure Pods Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
    ## @param podSecurityContext.enabled Enabled OPENLDAP  pods' Security Context
    ## @param podSecurityContext.fsGroup Set OPENLDAP  pod's Security Context fsGroup
    ##
    podSecurityContext:
      enabled: true
      fsGroup: 1001
    ## Configure Container Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
    ## @param containerSecurityContext.enabled Enabled OPENLDAP  containers' Security Context
    ## @param containerSecurityContext.runAsUser Set OPENLDAP  containers' Security Context runAsUser
    ## @param containerSecurityContext.runAsNonRoot Set OPENLDAP  containers' Security Context runAsNonRoot
    ##
    containerSecurityContext:
      enabled: false
      runAsUser: 1001
      runAsNonRoot: true

    ## @param existingConfigmap The name of an existing ConfigMap with your custom configuration for OPENLDAP
    ##
    existingConfigmap:
    ## @param command Override default container command (useful when using custom images)
    ##
    command: []
    ## @param args Override default container args (useful when using custom images)
    ##
    args: []
    ## @param hostAliases OPENLDAP  pods host aliases
    ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
    ##
    hostAliases: []
    ## @param podLabels Extra labels for OPENLDAP  pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    ##
    podLabels: {}
    ## @param podAnnotations Annotations for OPENLDAP  pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    podAnnotations: {}
    ## @param podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ##
    podAffinityPreset: ""
    ## @param podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ##
    podAntiAffinityPreset: soft
    ## Node affinity preset
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
    ##
    nodeAffinityPreset:
      ## @param nodeAffinityPreset.type Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
      ##
      type: ""
      ## @param nodeAffinityPreset.key Node label key to match. Ignored if `affinity` is set
      ##
      key: ""
      ## @param nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set
      ## E.g.
      ## values:
      ##   - e2e-az1
      ##   - e2e-az2
      ##
      values: []
    ## @param affinity Affinity for OPENLDAP  pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## NOTE: `podAffinityPreset`, `podAntiAffinityPreset`, and `nodeAffinityPreset` will be ignored when it's set
    ##
    affinity: {}
    ## @param nodeSelector Node labels for OPENLDAP  pods assignment
    ## ref: https://kubernetes.io/docs/user-guide/node-selection/
    ##
    nodeSelector: {}
    ## @param tolerations Tolerations for OPENLDAP  pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []
    ## @param updateStrategy.type OPENLDAP  statefulset strategy type
    ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
    ##
    updateStrategy:
      ## StrategyType
      ## Can be set to RollingUpdate or OnDelete
      ##
      type: RollingUpdate
    ## @param priorityClassName OPENLDAP  pods' priorityClassName
    ##
    priorityClassName: ""
    ## @param schedulerName Name of the k8s scheduler (other than default) for OPENLDAP  pods
    ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
    ##
    schedulerName: ""
    ## @param lifecycleHooks for the OPENLDAP  container(s) to automate configuration before or after startup
    ##
    lifecycleHooks: {}
    ## @param extraEnvVars Array with extra environment variables to add to OPENLDAP  nodes
    ## e.g:
    ## extraEnvVars:
    ##   - name: FOO
    ##     value: "bar"
    ##
    extraEnvVars: []
    ## @param extraEnvVarsCM Name of existing ConfigMap containing extra env vars for OPENLDAP  nodes
    ##
    extraEnvVarsCM:
    ## @param extraEnvVarsSecret Name of existing Secret containing extra env vars for OPENLDAP  nodes
    ##
    extraEnvVarsSecret:
    ## @param extraVolumes Optionally specify extra list of additional volumes for the OPENLDAP  pod(s)
    ##
    extraVolumes: []
    ## @param extraVolumeMounts Optionally specify extra list of additional volumeMounts for the OPENLDAP  container(s)
    ##
    extraVolumeMounts: []
    ## @param sidecars Add additional sidecar containers to the OPENLDAP  pod(s)
    ## e.g:
    ## sidecars:
    ##   - name: your-image-name
    ##     image: your-image
    ##     imagePullPolicy: Always
    ##     ports:
    ##       - name: portname
    ##         containerPort: 1234
    ##
    sidecars: {}
    ## @param initContainers Add additional init containers to the OPENLDAP  pod(s)
    ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
    ## e.g:
    ## initContainers:
    ##  - name: your-image-name
    ##    image: your-image
    ##    imagePullPolicy: Always
    ##    command: ['sh', '-c', 'echo "hello world"']
    ##
    initContainers: {}
    ## ServiceAccount configuration
    ##
    serviceAccount:
      ## @param serviceAccount.create Specifies whether a ServiceAccount should be created
      ##
      create: true
      ## @param serviceAccount.name The name of the ServiceAccount to use.
      ## If not set and create is true, a name is generated using the common.names.fullname template
      ##
      name: ""

    ## @section Init Container Parameters

    ## 'volumePermissions' init container parameters
    ## Changes the owner and group of the persistent volume mount point to runAsUser:fsGroup values
    ##   based on the *podSecurityContext/*containerSecurityContext parameters
    ##
    volumePermissions:
      ## @param volumePermissions.enabled Enable init container that changes the owner/group of the PV mount point to `runAsUser:fsGroup`
      ##
      enabled: false
      ## Bitnami Shell image
      ## ref: https://hub.docker.com/r/bitnami/bitnami-shell/tags/
      ## @param volumePermissions.image.registry Bitnami Shell image registry
      ## @param volumePermissions.image.repository Bitnami Shell image repository
      ## @param volumePermissions.image.tag Bitnami Shell image tag (immutable tags are recommended)
      ## @param volumePermissions.image.pullPolicy Bitnami Shell image pull policy
      ## @param volumePermissions.image.pullSecrets Bitnami Shell image pull secrets
      ##
      image:
        registry: docker.io
        repository: bitnami/bitnami-shell
        tag: 10-debian-10
        pullPolicy: IfNotPresent
        ## Optionally specify an array of imagePullSecrets.
        ## Secrets must be manually created in the namespace.
        ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
        ## e.g:
        ## pullSecrets:
        ##   - myRegistryKeySecretName
        ##
        pullSecrets: []
      ## Command to execute during the volumePermission startup
      ## command: ['sh', '-c', 'echo "hello world"']
      command: {}
      ## Init container's resource requests and limits
      ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
      ## @param volumePermissions.resources.limits The resources limits for the init container
      ## @param volumePermissions.resources.requests The requested resources for the init container
      ##
      resources:
        limits: {}
        requests: {}
      ## Init container Container Security Context
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
      ## @param volumePermissions.containerSecurityContext.runAsUser Set init container's Security Context runAsUser
      ## NOTE: when runAsUser is set to special value "auto", init container will try to chown the
      ##   data folder to auto-determined user&group, using commands: `id -u`:`id -G | cut -d" " -f2`
      ##   "auto" is especially useful for OpenShift which has scc with dynamic user ids (and 0 is not allowed)
      ##
      containerSecurityContext:
        runAsUser: 0

    ## Configure extra options for liveness, readiness, and startup probes
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
    livenessProbe:
      enabled: true
      initialDelaySeconds: 20
      periodSeconds: 10
      timeoutSeconds: 1
      successThreshold: 1
      failureThreshold: 10
    readinessProbe:
      enabled: true
      initialDelaySeconds: 20
      periodSeconds: 10
      timeoutSeconds: 1
      successThreshold: 1
      failureThreshold: 10
    startupProbe:
      enabled: true
      initialDelaySeconds: 0
      periodSeconds: 10
      timeoutSeconds: 1
      successThreshold: 1
      failureThreshold: 30

    ## test container details
    test:
      enabled: false
      image:
        repository: dduportal/bats
        tag: 0.4.0

    ## ltb-passwd
    ltb-passwd:
      enabled : true
      image:
        tag: 5.2.3
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: nginx
          cert-manager.io/cluster-issuer: ca-issuer
        path: /
        pathType: Prefix
        ## Ingress Host
        hosts:
        - "ssl-ldap2.systemtracker.no-ip.org"
        tls:
          - secretName: ssl-ldap2-tls
            hosts:
              - ssl-ldap2.systemtracker.no-ip.org
      ldap:
        # if you want to restrict search base tree for users instead of complete domain
        # searchBase: "ou=alokhom,dc=systemtracker,dc=no-ip,dc=org"
        # if you want to use a dedicated bindDN for the search with less permissions instead of cn=admin one
        bindDN: "cn=admin,dc=systemtracker,dc=no-ip,dc=org"
        # if you want to use a specific key of the credentials secret instead of the default one (LDAP_ADMIN_PASSWORD)
        # passKey: LDAP_MY_KEY

    ## phpldapadmin
    phpldapadmin:
      enabled: true
      image:
        tag: 0.9.0
      env:
        PHPLDAPADMIN_LDAP_CLIENT_TLS_REQCERT: "never"
        # PHPLDAPADMIN_LDAP_HOSTS: openldap
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: nginx
          cert-manager.io/cluster-issuer: ca-issuer
        path: /
        pathType: Prefix
        ## Ingress Host
        hosts:
        - phpldapadmin.systemtracker.no-ip.org
        tls:
          - secretName: phpldapadmin-tls
            hosts:
              - phpldapadmin.systemtracker.no-ip.org